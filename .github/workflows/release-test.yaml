name: workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag version to release (e.g., v10.4.12)'
        required: true

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Release Content for Specified Tag
        id: get_release_content
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          # Set the target repository and version (tag)
          TARGET_REPO="maykinmedia/open-inwoner"
          TAG_VERSION="${{ github.event.inputs.version }}"

          # Fetch the release content for the specified tag
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$TARGET_REPO/releases/$TAG_VERSION")

          # Check if the tag exists by verifying the presence of an ID
          RELEASE_ID=$(echo "$RESPONSE" | jq -r '.id // empty')
          if [ -z "$RELEASE_ID" ]; then
            echo "Error: Tag $TAG_VERSION does not exist in $TARGET_REPO."
            exit 1
          fi

          # Extract the release content (body) from the response
          RELEASE_BODY=$(echo "$RESPONSE" | jq -r '.body // "No release notes available for this tag."')
          
          # Set release content in environment variable for later use
          echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_ENV

      - name: Create or Update GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: "Release ${{ github.event.inputs.version }}"
          body: |
            ## Release Notes for ${{ github.event.inputs.version }}
            ${{ env.RELEASE_BODY }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
