name: Release Charts

on:
  workflow_dispatch:
     inputs:
      release_version:
        description: 'Specify the release version number'
        required: true
      
jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set Chart and App Versions
        run: |
          # Update the chart version and app version in Chart.yaml
          sed -i "s/^version: .*/version: ${{ github.event.inputs.release_version }}/" charts/podiumd/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: ${{ github.event.inputs.release_version }}/" charts/podiumd/Chart.yaml

      - name: Extract Grafana Version from README.md
        id: extract_grafana_version
        run: |
          # Extract the version for Grafana from README.md
          GRAFANA_VERSION=$(grep -A 1 -i "Grafana" README.md | awk '{print $2}' | head -n 1)
          
          # Verify the extracted version and set it as an output
          if [ -z "$GRAFANA_VERSION" ]; then
            echo "Grafana version not found in README.md."
            exit 1
          fi
          echo "Found Grafana version: $GRAFANA_VERSION"
          echo "::set-output name=grafana_version::$GRAFANA_VERSION"

      - name: Fetch Grafana Changelog for Specific Version
        id: fetch_grafana_changelog
        run: |
          # Define the URL to the changelog in the Grafana repository
          GRAFANA_CHANGELOG_URL="https://raw.githubusercontent.com/grafana/helm-charts/main/charts/promtail/CHANGELOG.md"
          
          # Fetch the changelog file
          CHANGELOG_CONTENT=$(curl -s "$GRAFANA_CHANGELOG_URL")

          # Extract the changelog entry for the specific version from the dependency changelog
          GRAFANA_VERSION="${{ steps.extract_grafana_version.outputs.grafana_version }}"
          VERSION_CHANGELOG=$(echo "$CHANGELOG_CONTENT" | awk "/## $GRAFANA_VERSION/,/^## /" | sed '$d')

          # Verify that changelog data was retrieved
          if [ -z "$VERSION_CHANGELOG" ]; then
            echo "No changelog entry found for Grafana version $GRAFANA_VERSION."
            exit 1
          fi
          echo "Found changelog entry for Grafana version $GRAFANA_VERSION"
          echo "::set-output name=changelog::$VERSION_CHANGELOG"

      - name: Run chart-releaser with Version-Specific Changelog
        uses: helm/chart-releaser-action@v1.6.0
        with:
          skip_existing: true
          body: |
            # Release Notes
            ### Grafana Changelog for version ${{ steps.extract_grafana_version.outputs.grafana_version }}
            ${{ steps.fetch_grafana_changelog.outputs.changelog }}
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
