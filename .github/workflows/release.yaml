name: Release Charts 

on:
  workflow_dispatch:
     inputs:
      release_version:
        description: 'Specify the release version number'
        required: true
      
jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Delete existing tag if it exists
        run: |
          TAG=${{ github.event.inputs.release_version }}
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            git push --delete origin "$TAG"
            git tag -d "$TAG"
          fi
          
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set Chart and App Versions
        run: |
          sed -i "s/^version: .*/version: ${{ github.event.inputs.release_version }}/" charts/podiumd/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: ${{ github.event.inputs.release_version }}/" charts/podiumd/Chart.yaml

      - name: Fetch changelogs from websites
        id: fetch_changelogs
        run: |
          WEBSITE1_CHANGELOG=$(curl -s https://raw.githubusercontent.com/open-formulieren/open-forms/refs/heads/master/CHANGELOG.rst | sed -n '5,20p')
          WEBSITE2_CHANGELOG=$(curl -s https://raw.githubusercontent.com/open-zaak/open-zaak/main/CHANGELOG.rst | sed -n '5,20p')
          WEBSITE3_CHANGELOG=$(curl -s https://raw.githubusercontent.com/maykinmedia/open-klant/refs/heads/master/CHANGELOG.rst | sed -n '5,20p')
          WEBSITE4_CHANGELOG=$(curl -s https://raw.githubusercontent.com/open-zaak/open-notificaties/refs/heads/main/CHANGELOG.rst | sed -n '5,20p')
          WEBSITE5_CHANGELOG=$(curl -s https://raw.githubusercontent.com/maykinmedia/objects-api/refs/heads/stable/2.4.x/CHANGELOG.rst | sed -n '5,20p')
          WEBSITE6_CHANGELOG=$(curl -s https://raw.githubusercontent.com/maykinmedia/objecttypes-api/refs/heads/master/CHANGELOG.rst | sed -n '5,20p')
          WEBSITE7_CHANGELOG=$(curl -s https://api.github.com/repos/maykinmedia/open-inwoner/releases/latest | jq -r '.body')
          
          # Aggregate changelogs into an environment variable
          echo "changelogs<<EOF" >> $GITHUB_ENV
          echo "### Open Formulieren" >> $GITHUB_ENV
          echo "$WEBSITE1_CHANGELOG" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### Open Zaak" >> $GITHUB_ENV
          echo "$WEBSITE2_CHANGELOG" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### Open Klant" >> $GITHUB_ENV
          echo "$WEBSITE3_CHANGELOG" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### Open Notificaties" >> $GITHUB_ENV
          echo "$WEBSITE4_CHANGELOG" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### Objecten" >> $GITHUB_ENV
          echo "$WEBSITE5_CHANGELOG" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### Objecttypen" >> $GITHUB_ENV
          echo "$WEBSITE6_CHANGELOG" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### Open Inwoner" >> $GITHUB_ENV
          echo "$WEBSITE7_CHANGELOG" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add maykinmedia https://maykinmedia.github.io/charts
          helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo add wiremind https://wiremind.github.io/wiremind-helm-charts
          helm repo add dimpact https://Dimpact-Samenwerking.github.io/helm-charts
          helm repo add elastic https://helm.elastic.co
          helm repo add kiss-frontend https://raw.githubusercontent.com/Klantinteractie-Servicesysteem/KISS-frontend/main/helm
          helm repo add kiss-adapter https://raw.githubusercontent.com/ICATT-Menselijk-Digitaal/podiumd-adapter/main/helm
          helm repo add kiss-elastic https://raw.githubusercontent.com/Klantinteractie-Servicesysteem/.github/main/docs/scripts/elastic

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          skip_existing: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"   

      - name: Get Latest Verified Tag and Content
        id: get_verified_tag
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          # Fetch all tags and filter for verified ones, get the latest verified tag
          LATEST_VERIFIED_TAG=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/open-formulieren/open-forms/tags" | jq -r '.[] | select(.verified) | .name' | head -n 1)

          # If there's no verified tag, exit with a message
          if [ -z "$LATEST_VERIFIED_TAG" ]; then
            echo "No verified tag found."
            exit 1
          fi
          
          echo "Latest verified tag: $LATEST_VERIFIED_TAG"
          echo "LATEST_VERIFIED_TAG=$LATEST_VERIFIED_TAG" >> $GITHUB_ENV

          # Fetch the release content for the verified tag
          VERIFIED_TAG_CONTENT=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/open-formulieren/open-forms/tags/$LATEST_VERIFIED_TAG" | jq -r '.body // empty')
          
          echo "VERIFIED_TAG_CONTENT=$VERIFIED_TAG_CONTENT" >> $GITHUB_ENV
          
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          release_name: "Release ${{ github.event.inputs.release_version }}"
          body: |
            ## Changes in this Release
            ${{ env.commits }}
            ## Changelogs
            ${{ env.changelogs }}
            ${{ env.VERIFIED_TAG_CONTENT }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

